/*
 * @Author: Brightness
 * @Date: 2021-06-16 14:11:21
 * @LastEditors: Brightness
 * @LastEditTime: 2021-06-16 15:01:07
 * @Description:
 */
//在 JavaScript 中，RegExp 对象是一个预定义了属性和方法的正则表达式对象

let patt = /e/;
let rs = patt.test("The best");
console.log(rs); // 字符串中含有 "e"，所以该实例输出为 true
let str = patt.exec("The best");
console.log(str);

/* 修饰符 */
/*
 *       i       执行对大小写不敏感的匹配
 *       g       执行全局匹配(查找所有匹配而非在找到第一个匹配后停止)
 *       m       执行多行匹配
 */

/* 模式 */
//表达式
/*
 *       [abc]   查找方括号之间的任何字符
 *       [^abc]  查找任何不在方括号之间的字符
 *       [0-9]   查找任何从0至9的数字
 *       [a-z]	 查找任何从小写 a 到小写 z 的字符
 *       [A-Z]   查找任何从大写 A 到大写 Z 的字符
 *       [A-z]   查找任何从大写 A 到小写 z 的字符
 *       [adgk]	 查找给定集合内的任何字符
 *       [^adgk] 查找给定集合外的任何字符
 *       (x|y)   查找任何以|分隔的选项
 *       (red|blue|green) 查找任何指定的选项
 */

//元字符
/*      \w      查找数字、字母及下划线
 *      \W      查找非单词字符
 *      \d      查找数字
 *      \D      查找非数字字符
 *      \s      查找空白字符
 *      \S      查找非空白字符
 *      \b      匹配单词边界
 *      \B      匹配非单词边界
 *      \0      查找NULL字符
 *      \n      查找换行符
 *      \f      查找换页符
 *      \r      查找回车符
 *      \t      查找制表符
 *      \v      查找垂直制表符
 *      \uxxx   查找以十六进制数 xxxx 规定的 Unicode 字符
 */

//量词
/*
 *      n+      匹配任何包含至少一个 n 的字符串
 *      n*      匹配任何包含零个或多个 n 的字符串
 *      n?      匹配任何包含零个或一个 n
 *      n{X}    匹配包含 X 个 n 的序列的字符串。例如，/a{2}/ 不匹配 "candy," 中的 "a"，但是匹配 "caandy," 中的两个 "a"，且匹配 "caaandy." 中的前两个 "a"
 *      n{X,Y}  X 和 Y 为正整数。前面的模式 n 连续出现至少 X 次，至多 Y 次时匹配。例如，/a{1,3}/ 不匹配 "cndy"，匹配 "candy," 中的 "a"，"caandy,"
 *              中的两个 "a"，匹配 "caaaaaaandy" 中的前面三个 "a"。注意，当匹配 "caaaaaaandy" 时，即使原始字符串拥有更多的 "a"，匹配项也是 "aaa"。
 *      n$      匹配任何结尾为 n 的字符串
 *      ^n      匹配任何开头为 n 的字符串
 *      ?=n     匹配任何其后紧接指定字符串 n 的字符串
 *      ?!n     匹配任何其后没有紧接指定字符串 n 的字符串
 */
